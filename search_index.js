var searchModuleIndex = ["vtl","autograd","datasets","storage",];
var searchIndex = ["Tensor<T>","apply","assign","broadcast_to","copy","custom_iterator","diagonal","equal","fill","get","is_col_major","is_col_major_contiguous","is_contiguous","is_matrix","is_row_major","is_row_major_contiguous","is_square_matrix","is_vector","iterator","iterators","iterators","map","napply","nmap","nreduce","offset_index","rank","ravel","reduce","reshape","set","size","slice","slice_hilo","str","strided_offset_index","swapaxes","t","to_array","transpose","view","broadcastable","TensorData","from_array","empty","empty_like","identity","eye","zeros","zeros_like","ones","ones_like","full","full_like","range","seq","from_1d","from_2d","MapFn","ApplyFn","ReducerFn","NMapFn","NApplyFn","NReducerFn","IteratorStrategy","TensorIterator","IteratorBuildData","TensorIterator<T>","next","[]&TensorIterator<T>","next","diag","diag_flat","tril","tril_offset","tril_inpl","tril_inpl_offset","triu","triu_offset","triu_inpl","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","cot","degrees","erf","erfc","exp","exp2","expm1","f32_bits","f32_from_bits","f64_bits","f64_from_bits","factorial","floor","fmod","gamma","gcd","hypot","lcm","log","log10","log1p","log2","log_factorial","log_gamma","log_n","max","min","nextafter","nextafter32","pow","pow10","radians","round","round_to_even","sin","sinh","sqrt","tan","tanh","trunc","add","add_scalar","substract","substract_scalar","divide","divide_scalar","multiply","multiply_scalar","random","random_seed","array_split","array_split_expl","split","split_expl","hsplit","hsplit_expl","vsplit","vsplit_expl","dsplit","dsplit_expl","AxisData","vstack","hstack","dstack","column_stack","stack","concatenate","expand_dims","MemoryFormat","Tensor","ensure_memory","Context","new_ctx","Context<T>","len","push","last","pop","variable","str","ContextVariableData","register","CacheParam","Gate","AddGate","new_add_gate","AddGate<T>","backward","cache","SubstractGate","new_substract_gate","SubstractGate<T>","backward","cache","MultiplyGate","new_multiply_gate","MultiplyGate<T>","backward","cache","DivideGate","new_divide_gate","DivideGate<T>","backward","cache","Node","new_node","Payload","new_payload","Variable","VariableData","new_variable","Variable<T>","is_grad_needed","str","backprop","DatasetType","DatasetLoader","DatasetBatch","MnistDataset","str","next","MnistBatch","load_mnist","Storage","new_storage","from_array","Storage<T>","get","set","fill","clone","like","like_with_len","offset","to_array","StorageDataType",];
var searchModuleData = [["","vtl.html"],["","autograd.html"],["","datasets.html"],["","storage.html"],];
var searchData = [["vtl","","vtl.html#Tensor<T>","type "],["vtl","","vtl.html#Tensor<T>.apply","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.assign","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.broadcast_to","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.copy","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.custom_iterator","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.diagonal","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.equal","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.fill","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.get","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_col_major","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_col_major_contiguous","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_contiguous","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_matrix","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_row_major","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_row_major_contiguous","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_square_matrix","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.is_vector","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.iterator","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.iterators","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.iterators","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.map","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.napply","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.nmap","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.nreduce","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.offset_index","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.rank","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.ravel","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.reduce","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.reshape","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.set","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.size","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.slice","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.slice_hilo","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.str","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.strided_offset_index","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.swapaxes","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.t","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.to_array","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.transpose","fn (Tensor<T>)"],["vtl","","vtl.html#Tensor<T>.view","fn (Tensor<T>)"],["vtl","","vtl.html#broadcastable","fn "],["vtl","","vtl.html#TensorData","struct "],["vtl","","vtl.html#from_array","fn "],["vtl","","vtl.html#empty","fn "],["vtl","","vtl.html#empty_like","fn "],["vtl","","vtl.html#identity","fn "],["vtl","","vtl.html#eye","fn "],["vtl","","vtl.html#zeros","fn "],["vtl","","vtl.html#zeros_like","fn "],["vtl","","vtl.html#ones","fn "],["vtl","","vtl.html#ones_like","fn "],["vtl","","vtl.html#full","fn "],["vtl","","vtl.html#full_like","fn "],["vtl","","vtl.html#range","fn "],["vtl","","vtl.html#seq","fn "],["vtl","","vtl.html#from_1d","fn "],["vtl","","vtl.html#from_2d","fn "],["vtl","","vtl.html#MapFn","type "],["vtl","","vtl.html#ApplyFn","type "],["vtl","","vtl.html#ReducerFn","type "],["vtl","","vtl.html#NMapFn","type "],["vtl","","vtl.html#NApplyFn","type "],["vtl","","vtl.html#NReducerFn","type "],["vtl","","vtl.html#IteratorStrategy","enum "],["vtl","","vtl.html#TensorIterator","struct "],["vtl","","vtl.html#IteratorBuildData","struct "],["vtl","","vtl.html#TensorIterator<T>","type "],["vtl","","vtl.html#TensorIterator<T>.next","fn (TensorIterator<T>)"],["vtl","","vtl.html#[]&TensorIterator<T>","type "],["vtl","","vtl.html#[]&TensorIterator<T>.next","fn ([]&TensorIterator<T>)"],["vtl","","vtl.html#diag","fn "],["vtl","","vtl.html#diag_flat","fn "],["vtl","","vtl.html#tril","fn "],["vtl","","vtl.html#tril_offset","fn "],["vtl","","vtl.html#tril_inpl","fn "],["vtl","","vtl.html#tril_inpl_offset","fn "],["vtl","","vtl.html#triu","fn "],["vtl","","vtl.html#triu_offset","fn "],["vtl","","vtl.html#triu_inpl","fn "],["vtl","","vtl.html#abs","fn "],["vtl","","vtl.html#acos","fn "],["vtl","","vtl.html#acosh","fn "],["vtl","","vtl.html#asin","fn "],["vtl","","vtl.html#asinh","fn "],["vtl","","vtl.html#atan","fn "],["vtl","","vtl.html#atan2","fn "],["vtl","","vtl.html#atanh","fn "],["vtl","","vtl.html#cbrt","fn "],["vtl","","vtl.html#ceil","fn "],["vtl","","vtl.html#cos","fn "],["vtl","","vtl.html#cosh","fn "],["vtl","","vtl.html#cot","fn "],["vtl","","vtl.html#degrees","fn "],["vtl","","vtl.html#erf","fn "],["vtl","","vtl.html#erfc","fn "],["vtl","","vtl.html#exp","fn "],["vtl","","vtl.html#exp2","fn "],["vtl","","vtl.html#expm1","fn "],["vtl","","vtl.html#f32_bits","fn "],["vtl","","vtl.html#f32_from_bits","fn "],["vtl","","vtl.html#f64_bits","fn "],["vtl","","vtl.html#f64_from_bits","fn "],["vtl","","vtl.html#factorial","fn "],["vtl","","vtl.html#floor","fn "],["vtl","","vtl.html#fmod","fn "],["vtl","","vtl.html#gamma","fn "],["vtl","","vtl.html#gcd","fn "],["vtl","","vtl.html#hypot","fn "],["vtl","","vtl.html#lcm","fn "],["vtl","","vtl.html#log","fn "],["vtl","","vtl.html#log10","fn "],["vtl","","vtl.html#log1p","fn "],["vtl","","vtl.html#log2","fn "],["vtl","","vtl.html#log_factorial","fn "],["vtl","","vtl.html#log_gamma","fn "],["vtl","","vtl.html#log_n","fn "],["vtl","","vtl.html#max","fn "],["vtl","","vtl.html#min","fn "],["vtl","","vtl.html#nextafter","fn "],["vtl","","vtl.html#nextafter32","fn "],["vtl","","vtl.html#pow","fn "],["vtl","","vtl.html#pow10","fn "],["vtl","","vtl.html#radians","fn "],["vtl","","vtl.html#round","fn "],["vtl","","vtl.html#round_to_even","fn "],["vtl","","vtl.html#sin","fn "],["vtl","","vtl.html#sinh","fn "],["vtl","","vtl.html#sqrt","fn "],["vtl","","vtl.html#tan","fn "],["vtl","","vtl.html#tanh","fn "],["vtl","","vtl.html#trunc","fn "],["vtl","","vtl.html#add","fn "],["vtl","","vtl.html#add_scalar","fn "],["vtl","","vtl.html#substract","fn "],["vtl","","vtl.html#substract_scalar","fn "],["vtl","","vtl.html#divide","fn "],["vtl","","vtl.html#divide_scalar","fn "],["vtl","","vtl.html#multiply","fn "],["vtl","","vtl.html#multiply_scalar","fn "],["vtl","","vtl.html#random","fn "],["vtl","","vtl.html#random_seed","fn "],["vtl","","vtl.html#array_split","fn "],["vtl","","vtl.html#array_split_expl","fn "],["vtl","","vtl.html#split","fn "],["vtl","","vtl.html#split_expl","fn "],["vtl","","vtl.html#hsplit","fn "],["vtl","","vtl.html#hsplit_expl","fn "],["vtl","","vtl.html#vsplit","fn "],["vtl","","vtl.html#vsplit_expl","fn "],["vtl","","vtl.html#dsplit","fn "],["vtl","","vtl.html#dsplit_expl","fn "],["vtl","","vtl.html#AxisData","struct "],["vtl","","vtl.html#vstack","fn "],["vtl","","vtl.html#hstack","fn "],["vtl","","vtl.html#dstack","fn "],["vtl","","vtl.html#column_stack","fn "],["vtl","","vtl.html#stack","fn "],["vtl","","vtl.html#concatenate","fn "],["vtl","","vtl.html#expand_dims","fn "],["vtl","","vtl.html#MemoryFormat","enum "],["vtl","","vtl.html#Tensor","struct "],["vtl","","vtl.html#ensure_memory","fn "],["autograd","","autograd.html#Context","struct "],["autograd","","autograd.html#new_ctx","fn "],["autograd","","autograd.html#Context<T>","type "],["autograd","","autograd.html#Context<T>.len","fn (Context<T>)"],["autograd","","autograd.html#Context<T>.push","fn (Context<T>)"],["autograd","","autograd.html#Context<T>.last","fn (Context<T>)"],["autograd","","autograd.html#Context<T>.pop","fn (Context<T>)"],["autograd","","autograd.html#Context<T>.variable","fn (Context<T>)"],["autograd","","autograd.html#Context<T>.str","fn (Context<T>)"],["autograd","","autograd.html#ContextVariableData","struct "],["autograd","","autograd.html#register","fn "],["autograd","","autograd.html#CacheParam","interface "],["autograd","","autograd.html#Gate","interface "],["autograd","","autograd.html#AddGate","struct "],["autograd","","autograd.html#new_add_gate","fn "],["autograd","","autograd.html#AddGate<T>","type "],["autograd","","autograd.html#AddGate<T>.backward","fn (AddGate<T>)"],["autograd","","autograd.html#AddGate<T>.cache","fn (AddGate<T>)"],["autograd","","autograd.html#SubstractGate","struct "],["autograd","","autograd.html#new_substract_gate","fn "],["autograd","","autograd.html#SubstractGate<T>","type "],["autograd","","autograd.html#SubstractGate<T>.backward","fn (SubstractGate<T>)"],["autograd","","autograd.html#SubstractGate<T>.cache","fn (SubstractGate<T>)"],["autograd","","autograd.html#MultiplyGate","struct "],["autograd","","autograd.html#new_multiply_gate","fn "],["autograd","","autograd.html#MultiplyGate<T>","type "],["autograd","","autograd.html#MultiplyGate<T>.backward","fn (MultiplyGate<T>)"],["autograd","","autograd.html#MultiplyGate<T>.cache","fn (MultiplyGate<T>)"],["autograd","","autograd.html#DivideGate","struct "],["autograd","","autograd.html#new_divide_gate","fn "],["autograd","","autograd.html#DivideGate<T>","type "],["autograd","","autograd.html#DivideGate<T>.backward","fn (DivideGate<T>)"],["autograd","","autograd.html#DivideGate<T>.cache","fn (DivideGate<T>)"],["autograd","","autograd.html#Node","struct "],["autograd","","autograd.html#new_node","fn "],["autograd","","autograd.html#Payload","struct "],["autograd","","autograd.html#new_payload","fn "],["autograd","","autograd.html#Variable","struct "],["autograd","","autograd.html#VariableData","struct "],["autograd","","autograd.html#new_variable","fn "],["autograd","","autograd.html#Variable<T>","type "],["autograd","","autograd.html#Variable<T>.is_grad_needed","fn (Variable<T>)"],["autograd","","autograd.html#Variable<T>.str","fn (Variable<T>)"],["autograd","","autograd.html#Variable<T>.backprop","fn (Variable<T>)"],["datasets","","datasets.html#DatasetType","enum "],["datasets","","datasets.html#DatasetLoader","interface "],["datasets","","datasets.html#DatasetBatch","interface "],["datasets","","datasets.html#MnistDataset","struct "],["datasets","","datasets.html#MnistDataset.str","fn (MnistDataset)"],["datasets","","datasets.html#MnistDataset.next","fn (MnistDataset)"],["datasets","","datasets.html#MnistBatch","struct "],["datasets","","datasets.html#load_mnist","fn "],["storage","","storage.html#Storage","struct "],["storage","","storage.html#new_storage","fn "],["storage","","storage.html#from_array","fn "],["storage","","storage.html#Storage<T>","type "],["storage","","storage.html#Storage<T>.get","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.set","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.fill","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.clone","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.like","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.like_with_len","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.offset","fn (Storage<T>)"],["storage","","storage.html#Storage<T>.to_array","fn (Storage<T>)"],["storage","","storage.html#StorageDataType","type "],];
